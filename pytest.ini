[pytest]
# Test discovery patterns
python_files = test_*.py *_test.py
python_classes = Test*
python_functions = test_*

# Test paths - directories to search for tests
testpaths = tests

# Minimum version requirement
minversion = 6.0

# Default command line options
addopts = 
    # Coverage options
    --cov=fqcn_converter.utils.logging
    --cov-config=.coveragerc
    --cov-report=term-missing
    --cov-report=html:htmlcov
    --cov-report=xml:coverage.xml
    --cov-report=json:coverage.json
    
    # Test execution options
    --verbose
    --tb=short
    --strict-markers
    --strict-config
    
    # Performance and output options
    --durations=10
    --maxfail=1
    
    # Import mode for better module resolution
    --import-mode=importlib

# Markers for test categorization
markers =
    slow: marks tests as slow (deselect with '-m "not slow"')
    integration: marks tests as integration tests
    unit: marks tests as unit tests
    performance: marks tests as performance tests
    smoke: marks tests as smoke tests
    regression: marks tests as regression tests

# Directories to ignore during test collection
norecursedirs = 
    .git
    .tox
    .env
    .venv
    venv
    env
    dist
    build
    south_migrations
    migrations
    *.egg
    __pycache__
    .pytest_cache
    htmlcov
    .coverage*

# Filter warnings
filterwarnings =
    ignore::DeprecationWarning
    ignore::UserWarning
    ignore::pytest.PytestUnraisableExceptionWarning

# Console output style
console_output_style = progress

# Log configuration
log_cli = false
log_cli_level = INFO
log_cli_format = %(asctime)s [%(levelname)8s] %(name)s: %(message)s
log_cli_date_format = %Y-%m-%d %H:%M:%S

log_file = tests.log
log_file_level = DEBUG
log_file_format = %(asctime)s [%(levelname)8s] %(filename)s:%(lineno)d %(funcName)s(): %(message)s
log_file_date_format = %Y-%m-%d %H:%M:%S

# JUnit XML configuration
junit_suite_name = fqcn_converter_logging_tests
junit_logging = all
junit_log_passing_tests = true
junit_duration_report = total

# Timeout configuration would require pytest-timeout plugin

# Assertion configuration
enable_assertion_pass_hook = true

# Collect configuration handled by norecursedirs above