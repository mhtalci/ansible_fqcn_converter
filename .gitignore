# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Test output and temporary test files (but keep test source code)
test_output/
test_results/
.test_cache/
*.test.log

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# IDE
.vscode/
.idea/
*.swp
*.swo
*~
.vim/

# OS
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db
desktop.ini

# Project-specific logs
fqcn_conversion.log
*.fqcn_log

# Backup files
*.fqcn_backup
.fqcn_backups/
*.backup
*.bak

# Reports and output files
*_report.json
*_report.html
fqcn_conversion_report.*
fqcn_validation_report.*
batch_report.*

# Temporary files
*.tmp
*.temp
temp/
tmp/
.tmp/

# Development artifacts
.pre-commit-config.yaml.bak
.coverage.*
htmlcov/
.pytest_cache/
.tox/
.nox/

# Security scanning results
bandit-report.*
safety-report.*

# Performance profiling
*.prof
*.pstats

# Test output directories and temporary test files (but keep test source code)
test_output/
test_fixtures/
fqcn_test_*/
sample_projects/
demo_*/

# Keep tests/ directory and test files in version control
# Tests are important for project quality and should be tracked

# Kiro IDE and AI-related files
.kiro/
.kiro/**
*.kiro
kiro.config.*
kiro-*.log

# AI Assistant and LLM related files
.ai/
.llm/
.assistant/
ai-session.*
llm-session.*
assistant-session.*
*.ai.log
*.llm.log
*.assistant.log

# AI model files and caches
.model_cache/
.ai_cache/
.llm_cache/
*.model
*.checkpoint
*.ckpt
*.safetensors

# AI conversation logs and transcripts
conversation_*.json
chat_*.json
session_*.json
transcript_*.txt
ai_conversation.*
llm_conversation.*

# AI-generated temporary files
ai_temp/
llm_temp/
assistant_temp/
*.ai.tmp
*.llm.tmp
*.assistant.tmp

# AI configuration and settings
.ai_config/
.llm_config/
.assistant_config/
ai_settings.*
llm_settings.*
assistant_settings.*

# Context and memory files
.context/
.memory/
context_*.json
memory_*.json
*.context
*.memory

# AI debugging and profiling
ai_debug.*
llm_debug.*
assistant_debug.*
ai_profile.*
llm_profile.*

# Prompt engineering files (if not part of the project)
prompts_temp/
prompt_cache/
*.prompt.tmp