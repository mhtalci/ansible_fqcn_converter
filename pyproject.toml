# FQCN Converter - GitHub-Only Distribution
# This project is intentionally distributed only through GitHub
# and is NOT published on PyPI or other package repositories.

[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "fqcn-converter"
description = "Production-ready tool for converting Ansible playbooks to use Fully Qualified Collection Names (FQCNs) with smart conflict resolution and 100% test coverage"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "mhtalci", email = "hello@mehmetalci.com"}
]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Systems Administration",
    "Topic :: Utilities",
    "Topic :: Software Development :: Quality Assurance",
    "Topic :: Software Development :: Testing",
]
requires-python = ">=3.8"
dependencies = [
    "PyYAML>=5.3.1",
    "click>=7.0",
    "colorama>=0.4.3",
    "ruamel.yaml>=0.16.0",
]
dynamic = ["version"]

[project.optional-dependencies]
dev = [
    "pytest>=6.0",
    "pytest-cov>=2.10",
    "pytest-mock>=3.0",
    "black>=22.0",
    "flake8>=4.0",
    "mypy>=0.900",
    "bandit>=1.7",
    "pre-commit>=2.15",
    "tox>=3.20",
    "commitizen>=3.0",
    "semantic-version>=2.10",
]
docs = [
    "sphinx>=4.0",
    "sphinx-rtd-theme>=1.0",
    "myst-parser>=0.15",
]

[project.urls]
Homepage = "https://github.com/mhtalci/ansible_fqcn_converter"
Repository = "https://github.com/mhtalci/ansible_fqcn_converter"
Documentation = "https://github.com/mhtalci/ansible_fqcn_converter#readme"
"Bug Tracker" = "https://github.com/mhtalci/ansible_fqcn_converter/issues"

[project.scripts]
fqcn-converter = "fqcn_converter.cli.main:main"
fqcn-batch-converter = "fqcn_converter.cli.batch:main"
fqcn-validator = "fqcn_converter.cli.validate:main"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools_scm]
write_to = "src/fqcn_converter/_version.py"

[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["fqcn_converter"]
known_third_party = ["pytest", "yaml", "click", "colorama", "ruamel"]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true
show_column_numbers = true
pretty = true
exclude = [
    '^build/',
    '^dist/',
    '^\.venv/',
    '^venv/',
    '^\.tox/',
    '^\.eggs/',
    '.*\.egg/',
    '^__pycache__/',
    '^\.mypy_cache/',
    '^\.pytest_cache/',
    '^docs/_build/',
]

[[tool.mypy.overrides]]
module = [
    "pytest.*",
    "setuptools.*",
    "yaml.*",
    "ruamel.*",
    "click.*",
    "colorama.*",
    "rich.*",
]
ignore_missing_imports = true

[tool.bandit]
exclude_dirs = [
    "tests",
    "build",
    "dist",
    ".venv",
    "venv",
    ".tox",
    ".eggs",
    "*.egg",
    "__pycache__",
    ".mypy_cache",
    ".pytest_cache",
    "docs/_build"
]
skips = ["B101", "B601"]

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src/fqcn_converter"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/_version.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
show_missing = true
precision = 2

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py38,py39,py310,py311,py312,flake8,mypy,bandit,black,docs
isolated_build = true

[testenv]
deps = 
    pytest>=6.0
    pytest-cov>=2.10
    pytest-mock>=3.0
commands = pytest {posargs}

[testenv:flake8]
deps = flake8>=4.0
commands = flake8 src tests

[testenv:mypy]
deps = 
    mypy>=0.900
    types-PyYAML
    types-colorama
commands = mypy src

[testenv:bandit]
deps = bandit[toml]>=1.7
commands = bandit -r src -c pyproject.toml

[testenv:black]
deps = black>=22.0
commands = 
    black --check --diff src tests
    black --check --diff setup.py

[testenv:black-fix]
deps = black>=22.0
commands = 
    black src tests setup.py

[testenv:docs]
deps = 
    sphinx>=4.0
    sphinx-rtd-theme>=1.0
    myst-parser>=0.15
commands = sphinx-build -W -b html docs docs/_build/html

[testenv:coverage]
deps = 
    pytest>=6.0
    pytest-cov>=2.10
    coverage[toml]>=5.0
commands = 
    coverage run -m pytest
    coverage report
    coverage html
"""